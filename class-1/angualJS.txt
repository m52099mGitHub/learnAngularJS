MVC:

	为什么需要MVC:
		前端代码规模越来越大,切分职责是大势所趋
		为了复用:很多逻辑是一样的
		为了后期维护方便:修改一块功能不影响其它功能
		MVC只是手段,终极目标是模块化和复用
	前端MVC的困难:
		操作DOM的代码必须等待整个页面全部加载完成
		多个JS文件之间如果出现依赖,程序员必须自己解决
		JS的原型继承也给前端编程带来了很多困难
	AngularJS中的Controller实现MVC


$scope:
	1.是一个POJO(plain Old JavaScript Object)
	2.提供了一些工具方法
	3.是表达式的执行环境
	4.是一个树形结构,与DOM标签平行
	5.子$scope对象会继承父$scope的属性和方法
	6.每一个angular应用只有一个根$scope($rootScope)对象(一般位于ng-app上)
	7.$scope可以传播事件,类似DOM事件,可以向上或向下
	8.$scope不仅是MVC的基础,也是实现双数据绑定的基础
	9.可以用angular.element($0).scope()进行调试

$scope的生命周期:
	Creation--->Watcher registration(注册监测)--->MOdel mutation(模型变化)--->Mutation observation(脏检查)--->Scope destruction(销毁)












